import{_ as a,o as e,c as m,d as p}from"./app-da0654df.js";const t="/images/二维XY坐标系旋转.png",i="/images/三维XYZ坐标系旋转.png",n={},r=p('<h2 id="二维变换" tabindex="-1"><a class="header-anchor" href="#二维变换" aria-hidden="true">#</a> 二维变换</h2><h3 id="旋转" tabindex="-1"><a class="header-anchor" href="#旋转" aria-hidden="true">#</a> 旋转</h3><p>在二维 XY 坐标系中，向量<code>(x, y)</code>基于原点逆时针旋转 $\\theta$ 角度至向量<code>(x&#39;, y&#39;)</code>，其<em>变换矩阵</em>为</p><p>$$ \\begin{bmatrix}x&#39; &amp; y&#39;\\end{bmatrix} = \\begin{bmatrix}x &amp; y\\end{bmatrix}\\begin{bmatrix} cos\\theta &amp; sin\\theta \\ -sin\\theta &amp; cos\\theta \\end{bmatrix} $$</p><p>推导如下：</p><div align="center"><img src="'+t+'" width="60%"></div><p>$$ x^2 + y^2 = x&#39;^2 + y&#39;^2 $$</p><p>$$ sin\\alpha = { y \\over { \\sqrt { x^2 + y^2 } } } \\qquad cos\\alpha = { x \\over { \\sqrt { x^2 + y^2 } } } $$</p><p>$$ \\begin{split} sin(\\alpha + \\theta) &amp; = sin\\alpha cos\\theta + cos\\alpha sin\\theta \\ &amp; = cos\\theta { y \\over { \\sqrt { x^2 + y^2 } } } + sin\\alpha { x \\over { \\sqrt { x^2 + y^2 } } } \\ &amp; = { y&#39; \\over { \\sqrt { x&#39;^2 + y&#39;^2 } } } \\end{split} $$</p><p>$$ \\begin{split} &amp;\\Rightarrow y&#39; = x sin\\theta + y cos\\theta\\ &amp;\\Rightarrow x&#39; = x cos\\theta - y sin\\theta\\ &amp;\\Rightarrow \\begin{bmatrix}x&#39; &amp; y&#39;\\end{bmatrix} = \\begin{bmatrix}x &amp; y\\end{bmatrix}\\begin{bmatrix} cos\\theta &amp; sin\\theta \\ -sin\\theta &amp; cos\\theta \\end{bmatrix} \\end{split} $$</p><h3 id="缩放" tabindex="-1"><a class="header-anchor" href="#缩放" aria-hidden="true">#</a> 缩放</h3><p>在二维 XY 坐标系中，向量<code>(x, y)</code>进行缩放<code>n</code>倍得到向量<code>(nx, ny)</code>，其<em>变换矩阵</em>为</p><h1 id="begin-bmatrix-nx-ny-end-bmatrix" tabindex="-1"><a class="header-anchor" href="#begin-bmatrix-nx-ny-end-bmatrix" aria-hidden="true">#</a> $$ \\begin{bmatrix} nx &amp; ny \\end{bmatrix}</h1><p>\\begin{bmatrix} x &amp; y \\end{bmatrix} \\begin{bmatrix} n &amp; 0 \\ 0 &amp; n \\end{bmatrix} $$</p><h3 id="平移" tabindex="-1"><a class="header-anchor" href="#平移" aria-hidden="true">#</a> 平移</h3><p>在二维坐标系中，向量<code>(x, y)</code>进行平移得到<code>(x+m, y+n)</code>，需要引入<em>齐次坐标</em>得到变换矩阵，其变换矩阵为</p><h1 id="begin-bmatrix-x-m-y-n-1-end-bmatrix" tabindex="-1"><a class="header-anchor" href="#begin-bmatrix-x-m-y-n-1-end-bmatrix" aria-hidden="true">#</a> $$ \\begin{bmatrix} x+m &amp; y+n &amp; 1 \\end{bmatrix}</h1><p>\\begin{bmatrix} x &amp; y &amp; 1 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\ 0 &amp; 1 &amp; 0 \\ m &amp; n &amp; 1 \\ \\end{bmatrix} $$</p><h3 id="线性变换" tabindex="-1"><a class="header-anchor" href="#线性变换" aria-hidden="true">#</a> 线性变换</h3><p>在二维 XY 坐标系中，向量的变换都可由旋转、缩放和平移进行线性组合变换，通过逆矩阵可以进行还原变换</p><p>$$ \\begin{split} T&amp;=SM_1M_2...M_n \\ S&amp;=TM_n^{-1}M_{n-1}^{-1}...M_1^{-1} \\end{split} $$</p><p>单位矩阵的逆矩阵为其转置矩阵</p><h2 id="三维变换" tabindex="-1"><a class="header-anchor" href="#三维变换" aria-hidden="true">#</a> 三维变换</h2><blockquote><p>将三维变换转换为二维变换</p></blockquote><h3 id="旋转-1" tabindex="-1"><a class="header-anchor" href="#旋转-1" aria-hidden="true">#</a> 旋转</h3><p>分别围绕 x/y/z 轴 旋转</p><ul><li>绕 z 轴 旋转</li></ul><h1 id="begin-bmatrix-x-y-z-1-end-bmatrix" tabindex="-1"><a class="header-anchor" href="#begin-bmatrix-x-y-z-1-end-bmatrix" aria-hidden="true">#</a> $$ \\begin{bmatrix} x &amp; y &amp; z &amp; 1 \\end{bmatrix}</h1><p>\\begin{bmatrix} x&#39; &amp; y&#39; &amp; z&#39; &amp; 1 \\end{bmatrix} \\begin{bmatrix} cos\\theta &amp; sin\\theta &amp; 0 &amp; 0 \\ -sin\\theta &amp; cos\\theta &amp; 0 &amp; 0 \\ 0 &amp; 0 &amp; 1 &amp; 0 \\ 0 &amp; 0 &amp; 0 &amp; 1 \\ \\end{bmatrix} $$</p><ul><li>绕 x 轴 旋转</li></ul><h1 id="begin-bmatrix-x-y-z-1-end-bmatrix-1" tabindex="-1"><a class="header-anchor" href="#begin-bmatrix-x-y-z-1-end-bmatrix-1" aria-hidden="true">#</a> $$ \\begin{bmatrix} x &amp; y &amp; z &amp; 1 \\end{bmatrix}</h1><p>\\begin{bmatrix} x&#39; &amp; y&#39; &amp; z&#39; &amp; 1 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 0 &amp; 0 &amp; 0 \\ 0 &amp; cos\\theta &amp; sin\\theta &amp; 0 \\ 0 &amp; -sin\\theta &amp; cos\\theta &amp; 0 \\ 0 &amp; 0 &amp; 0 &amp; 1 \\ \\end{bmatrix} $$</p><ul><li>绕 y 轴 旋转</li></ul><h1 id="begin-bmatrix-x-y-z-1-end-bmatrix-2" tabindex="-1"><a class="header-anchor" href="#begin-bmatrix-x-y-z-1-end-bmatrix-2" aria-hidden="true">#</a> $$ \\begin{bmatrix} x &amp; y &amp; z &amp; 1 \\end{bmatrix}</h1><p>\\begin{bmatrix} x&#39; &amp; y&#39; &amp; z&#39; &amp; 1 \\end{bmatrix} \\begin{bmatrix} -sin\\theta &amp; 0 &amp; cos\\theta &amp; 0 \\ 0 &amp; 1 &amp; 0 &amp; 0 \\ cos\\theta &amp; 0 &amp; sin\\theta &amp; 0 \\ 0 &amp; 0 &amp; 0 &amp; 1 \\ \\end{bmatrix} $$</p><ul><li>绕经过原点的直线旋转角度$\\theta$，如图，旋转轴可通过<em>单位向量</em>获取相关值</li></ul><div align="center"><img src="'+i+'" width="60%"></div><p>1.将旋转轴 OA 旋转至 YOZ 平面内，即 OA 绕 y 轴 旋转角度 $\\alpha$ ，变换矩阵如下</p><p>$$ R_y(\\alpha)= \\begin{bmatrix} -sin\\alpha &amp; 0 &amp; cos\\alpha &amp; 0 \\ 0 &amp; 1 &amp; 0 &amp; 0 \\ cos\\alpha &amp; 0 &amp; sin\\alpha &amp; 0 \\ 0 &amp; 0 &amp; 0 &amp; 1 \\ \\end{bmatrix} $$</p><p>2.将旋转轴 OA 旋转至 Z 轴上，即 OA 绕 x 轴 旋转角度 $\\beta$ ，变换矩阵如下</p><p>$$ R_x(\\beta)= \\begin{bmatrix} cos\\beta &amp; sin\\beta &amp; 0 &amp; 0 \\ -sin\\beta &amp; cos\\beta &amp; 0 &amp; 0 \\ 0 &amp; 0 &amp; 1 &amp; 0 \\ 0 &amp; 0 &amp; 0 &amp; 1 \\ \\end{bmatrix} $$</p><p>3.物体绕 z 轴 旋转角度 $\\theta$ ，变换矩阵如下</p><p>$$ R_z(\\theta)= \\begin{bmatrix} cos\\theta &amp; sin\\theta &amp; 0 &amp; 0 \\ -sin\\theta &amp; cos\\theta &amp; 0 &amp; 0 \\ 0 &amp; 0 &amp; 1 &amp; 0 \\ 0 &amp; 0 &amp; 0 &amp; 1 \\ \\end{bmatrix} $$</p><p>4.物体还原步骤 2 和步骤 1 的变换，即进行逆矩阵变换，所以最终变换矩阵如下</p><p>$$ \\begin{split} R(\\theta)&amp;=R_y(\\alpha)R_x(\\beta)R_z(\\theta)R_x(-\\beta)R_y(-\\alpha)\\ &amp;=R_y(\\alpha)R_x(\\beta)R_z(\\theta)R_x^{-1}(\\beta)R_y^{-1}(\\alpha)\\ &amp;=R_y(\\alpha)R_x(\\beta)R_z(\\theta)R_x^T(\\beta)R_y^T(\\alpha) \\end{split} $$</p><h3 id="缩放-1" tabindex="-1"><a class="header-anchor" href="#缩放-1" aria-hidden="true">#</a> 缩放</h3><p>缩放变换矩阵如下</p><p>$$ Z(n)= \\begin{bmatrix} n &amp; 0 &amp; 0 &amp; 0\\ 0 &amp; n &amp; 0 &amp; 0\\ 0 &amp; 0 &amp; n &amp; 0\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{bmatrix} $$</p><h3 id="平移-1" tabindex="-1"><a class="header-anchor" href="#平移-1" aria-hidden="true">#</a> 平移</h3><p>平移变换矩阵如下</p><p>$$ T(a, b, c)= \\begin{bmatrix} 1 &amp; 0 &amp; 0 &amp; 0\\ 0 &amp; 1 &amp; 0 &amp; 0\\ 0 &amp; 0 &amp; 1 &amp; 0\\ a &amp; b &amp; c &amp; 1 \\end{bmatrix} $$</p><p>在三维坐标系中，任何变换都可通过上述三种变换进行组合</p>',52),h=[r];function b(x,d){return e(),m("div",null,h)}const c=a(n,[["render",b],["__file","2021-09-14-basic-mathematics-of-computer-graphics.html.vue"]]);export{c as default};
